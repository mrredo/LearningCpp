cmake_minimum_required(VERSION 3.25.0.0)
set(CMAKE_MODULE_PATH "C:/Users/Lietotﾄ）s/Documents/GitHub/learningcpp/build/_deps/curl-src/CMake;C:/Users/Lietotﾄ）s/Documents/GitHub/learningcpp/build/_deps/cpr-src/cmake;")
cmake_policy(SET CMP0091 NEW)
cmake_policy(SET CMP0141 OLD)
cmake_policy(SET CMP0126 OLD)
cmake_policy(SET CMP0128 OLD)
project(CMAKE_TRY_COMPILE C)
set(CMAKE_VERBOSE_MAKEFILE 1)
set(CMAKE_C_FLAGS "/DWIN32 /D_WINDOWS")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${COMPILE_DEFINITIONS}")
set(CMAKE_C_FLAGS_DEBUG "/Zi /Ob0 /Od /RTC1")
set(CMAKE_EXE_LINKER_FLAGS "/machine:x64")
set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${EXE_LINKER_FLAGS}")
include_directories(${INCLUDE_DIRECTORIES})
set(CMAKE_SUPPRESS_REGENERATION 1)
link_directories(${LINK_DIRECTORIES})
add_definitions([==[ -D_WIN32_WINNT=0x0600 -D_WINSOCKAPI_= -DSECURITY_WIN32]==])
cmake_policy(SET CMP0065 NEW)
cmake_policy(SET CMP0083 OLD)
include("${CMAKE_ROOT}/Modules/Internal/HeaderpadWorkaround.cmake")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "C:/Users/Lietotﾄ）s/Documents/GitHub/learningcpp/build/CMakeFiles/CMakeScratch/TryCompile-e2tho8")
add_executable(cmTC_995f0 "C:/Users/Lietotﾄ）s/Documents/GitHub/learningcpp/build/CMakeFiles/CMakeScratch/TryCompile-e2tho8/CheckSymbolExists.c")
file(GENERATE OUTPUT "${CMAKE_BINARY_DIR}/cmTC_995f0_$<UPPER_CASE:$<CONFIG>>_loc"
     CONTENT $<TARGET_FILE:cmTC_995f0>)
target_link_libraries(cmTC_995f0  "ws2_32" )
